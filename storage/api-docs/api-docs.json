{
    "openapi": "3.0.0",
    "info": {
        "title": "News portal",
        "description": "Documentation for the NewsAPI",
        "version": "1.0.0"
    },
    "paths": {
        "/adminDashboard": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Display a listing of non-admin users.",
                "description": "Returns a list of non-admin users for admin dashboard.",
                "operationId": "admin.index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "users": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "john@example.com"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/{userId}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Display the specified user's information and favourite articles.",
                "description": "Returns information about a specific user and their favourite articles.",
                "operationId": "admin.show",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "userFavourites": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Article Title"
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "example": "https://example.com/article"
                                                    },
                                                    "author": {
                                                        "type": "string",
                                                        "example": "Author Name"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Article Description"
                                                    },
                                                    "image_url": {
                                                        "type": "string",
                                                        "example": "https://example.com/image.jpg"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-12-01T12:34:56Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested resource could not be found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/comments/{comment_id}/edit": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Display the form for editing a specific user comment.",
                "operationId": "admin.comments.edit",
                "parameters": [
                    {
                        "name": "comment_id",
                        "in": "path",
                        "description": "ID of the comment to be edited",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "selectedComment": {
                                            "description": "The selected comment for editing.",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/comments/{comment_id}": {
            "patch": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update the specified user comment in storage.",
                "operationId": "admin.comments.update",
                "parameters": [
                    {
                        "name": "comment_id",
                        "in": "path",
                        "description": "ID of the comment to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "comment": {
                                        "description": "The updated comment text.",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Comment updated successfully.",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/articles": {
            "get": {
                "tags": [
                    "Articles"
                ],
                "summary": "Get a listing of articles.",
                "description": "Returns a list of articles based on the user's preferences and search criteria.",
                "operationId": "articles.index",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords or a phrase to search for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "articles": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "source": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "engadget"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Engadget"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "author": {
                                                        "type": "string",
                                                        "example": "Mat Smith"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "The Morning After: Microsoft recruits recently fired OpenAI CEO, Sam Altman"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "OpenAI’s board of directors announced Friday it had fired CEO Sam Altman. But he’s doing okay. By Monday morning, he had joined Microsoft “to lead a new advanced AI research team,” according to the company."
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "example": "https://www.engadget.com/the-morning-after-microsoft-recruits-recently-fired-openai-ceo-sam-altman-121523955.html"
                                                    },
                                                    "urlToImage": {
                                                        "type": "string",
                                                        "example": "https://s.yimg.com/ny/api/res/1.2/TdeBQRLZ0qN0hkvKFENN6A--/YXBwaWQ9aGlnaGxhbmRlcjt3PTEyMDA7aD04NTc-/https://s.yimg.com/os/creatr-uploaded-images/2023-11/7661fd60-85cc-11ee-bddf-d93b4819eea6"
                                                    },
                                                    "publishedAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-11-20T12:15:23Z"
                                                    },
                                                    "content": {
                                                        "type": "string",
                                                        "example": "OpenAI’s board of directors announced Friday it had fired CEO Sam Altman. But he’s doing okay. By Monday morning, he had joined Microsoft “to lead a new advanced AI research team,” according to the company… [+3202 chars]"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested resource could not be found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/articles/paginated": {
            "get": {
                "tags": [
                    "Articles"
                ],
                "summary": "Get a listing of articles based on user preferences and search criteria",
                "description": "Returns a list of articles based on the user's preferences and search criteria.",
                "operationId": "articles.paginated",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Keywords or a phrase to search for.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "language",
                        "in": "query",
                        "description": "The 2-letter ISO-639-1 code of the language.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sources",
                        "in": "query",
                        "description": "A comma-separated string of identifiers for the news sources or blogs.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "domains",
                        "in": "query",
                        "description": "A comma-separated string of domains (e.g., bbc.co.uk) to restrict the search to.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "exclude_domains",
                        "in": "query",
                        "description": "A comma-separated string of domains (e.g., bbc.co.uk) to exclude from the search.",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "A date and optional time for the oldest article allowed (in the format YYYY-MM-DD or YYYY-MM-DDTHH:mm:ss).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "A date and optional time for the newest article allowed (in the format YYYY-MM-DD or YYYY-MM-DDTHH:mm:ss).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "The order to sort the articles (possible values: 'relevancy', 'popularity', 'publishedAt').",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "relevancy",
                                "popularity",
                                "publishedAt"
                            ]
                        }
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "The number of articles to return per page.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number to retrieve.",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "articles": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "source": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "engadget"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Engadget"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "author": {
                                                        "type": "string",
                                                        "example": "Mat Smith"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "The Morning After: Microsoft recruits recently fired OpenAI CEO, Sam Altman"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "OpenAI’s board of directors announced Friday it had fired CEO Sam Altman. But he’s doing okay. By Monday morning, he had joined Microsoft “to lead a new advanced AI research team,” according to the company."
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "example": "https://www.engadget.com/the-morning-after-microsoft-recruits-recently-fired-openai-ceo-sam-altman-121523955.html"
                                                    },
                                                    "urlToImage": {
                                                        "type": "string",
                                                        "example": "https://s.yimg.com/ny/api/res/1.2/TdeBQRLZ0qN0hkvKFENN6A--/YXBwaWQ9aGlnaGxhbmRlcjt3PTEyMDA7aD04NTc-/https://s.yimg.com/os/creatr-uploaded-images/2023-11/7661fd60-85cc-11ee-bddf-d93b4819eea6"
                                                    },
                                                    "publishedAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2023-11-20T12:15:23Z"
                                                    },
                                                    "content": {
                                                        "type": "string",
                                                        "example": "OpenAI’s board of directors announced Friday it had fired CEO Sam Altman. But he’s doing okay. By Monday morning, he had joined Microsoft “to lead a new advanced AI research team,” according to the company… [+3202 chars]"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested resource could not be found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/topHeadlines": {
            "get": {
                "tags": [
                    "TopHeadlines"
                ],
                "summary": "Get a list of articles based on user preferences",
                "description": "Returns a list of articles based on the user's country and category preferences.",
                "operationId": "topHeadlines.index",
                "parameters": [
                    {
                        "name": "category",
                        "in": "query",
                        "description": "The selected category",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "The selected country",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "description": "The number of results to return per page (request)",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Use this to page through the results if the total results found is greater than the page size.",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "articles": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "source": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "source_id_example"
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Yahoo Entertainment"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "author": {
                                                        "type": "string",
                                                        "example": "Edwin Chan"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Musk Defends Himself on X After Antisemitic Furor Deepens - Yahoo Finance"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "(Bloomberg) -- Elon Musk railed against “bogus” media reports accusing him of antisemitism, issuing his strongest response yet after endorsing antisemitic..."
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "example": "https://finance.yahoo.com/news/musk-defends-himself-x-antisemitic-035726993.html"
                                                    },
                                                    "urlToImage": {
                                                        "type": "string",
                                                        "example": "https://s.yimg.com/ny/api/res/1.2/p_j_tPXC.zii92Y9Ck3XTw--/YXBwaWQ9aGlnaGxhbmRlcjt3PTEyMDA7aD04ODM-/https://media.zenfs.com/en/bloomberg_technology_68/e3d581a28a7356a3d18b50e2b529faec"
                                                    },
                                                    "publishedAt": {
                                                        "type": "string",
                                                        "example": "2023-11-20T07:32:00Z"
                                                    },
                                                    "content": {
                                                        "type": "string",
                                                        "example": "(Bloomberg) -- Elon Musk railed against bogus media reports accusing him of antisemitism, issuing his strongest response yet after endorsing antisemitic content in a post on X that provoked outrage a… [+1624 chars]"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested resource could not be found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/comments": {
            "post": {
                "tags": [
                    "Comments"
                ],
                "summary": "Store a new comment",
                "description": "Creates a new comment",
                "operationId": "storeComment",
                "requestBody": {
                    "description": "Comment data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "userId",
                                    "url",
                                    "comment"
                                ],
                                "properties": {
                                    "userId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "url": {
                                        "type": "string",
                                        "example": "https://example.com"
                                    },
                                    "comment": {
                                        "type": "string",
                                        "example": "This is a comment"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Comment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Comment created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "field_name": [
                                                    "Error message"
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/comments/{comment_id}": {
            "delete": {
                "tags": [
                    "Comments"
                ],
                "summary": "Delete a comment",
                "description": "Deletes a comment by ID",
                "operationId": "destroyComment",
                "parameters": [
                    {
                        "name": "comment_id",
                        "in": "path",
                        "description": "ID of the comment to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Comment deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Comment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "Comments"
                ],
                "summary": "Update a comment",
                "description": "Updates a comment by ID",
                "operationId": "updateComment",
                "parameters": [
                    {
                        "name": "comment_id",
                        "in": "path",
                        "description": "ID of the comment to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Comment data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "comment"
                                ],
                                "properties": {
                                    "comment": {
                                        "type": "string",
                                        "example": "Updated comment text"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Comment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Comment updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Comment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/comments/{comment_id}/edit": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Edit comment form",
                "description": "Displays the form to edit a comment",
                "operationId": "editComment",
                "parameters": [
                    {
                        "name": "comment_id",
                        "in": "path",
                        "description": "ID of the comment to edit",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Edit comment form displayed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Edit comment form displayed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Comment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/favourites": {
            "get": {
                "tags": [
                    "Favourites"
                ],
                "summary": "Get a listing of user's favourite articles.",
                "description": "Returns a list of articles that the user has marked as favourites.",
                "operationId": "favourites.index",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Article Title"
                                            },
                                            "url": {
                                                "type": "string",
                                                "example": "https://example.com/article"
                                            },
                                            "author": {
                                                "type": "string",
                                                "example": "Author Name"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Article Description"
                                            },
                                            "image_url": {
                                                "type": "string",
                                                "example": "https://example.com/image.jpg"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2023-12-01T12:34:56Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found - The requested resource could not be found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Favourites"
                ],
                "summary": "Store a newly created favourite article in databes.",
                "description": "Returns redirect to article.index.",
                "operationId": "favourites.store",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not Found - The requested resource could not be found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/favourites{favourite_id}": {
            "delete": {
                "tags": [
                    "Favourites"
                ],
                "summary": "Remove the specified favourite article from database.",
                "description": "Returns redirect to article.index.",
                "operationId": "favourites.destroy",
                "parameters": [
                    {
                        "name": "favourite_id",
                        "in": "path",
                        "description": "ID of the favorite article to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Not Found - The requested resource could not be found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/userSettings": {
            "get": {
                "tags": [
                    "User Settings"
                ],
                "summary": "Show the form for editing user settings.",
                "description": "Returns the form for editing user settings including preferred category, country, and language.",
                "operationId": "userSettings.edit",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "allLanguages": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "allCategories": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "allCountries": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "User Settings"
                ],
                "summary": "Update the user settings.",
                "description": "Updates the user settings including preferred category, country, and language.",
                "operationId": "userSettings.update",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category",
                                    "country",
                                    "language"
                                ],
                                "properties": {
                                    "category": {
                                        "description": "Preferred news category",
                                        "type": "string"
                                    },
                                    "country": {
                                        "description": "Preferred news country",
                                        "type": "string"
                                    },
                                    "language": {
                                        "description": "Preferred news language",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "302": {
                        "description": "Successful operation. Redirects to the user settings edit page.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User settings updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}